function sim = simulateChemostat(p)
%
% Load library:
%
if libisloaded("model")
    unloadlibrary("model")
end
loadlibrary('../Cpp/model.so','../Cpp/model.h')
%
% Set parameters:
%
calllib('model','setParameters', ...
    int32(p.n), ...
    double(p.m), ...
    double(p.rhoCN), ...
    double(p.epsilonL), ...
    double(p.epsilonF), ...
    double(p.ANm), ...
    double(p.ALm), ...
    double(p.AFm), ...
    double(p.Jmax), ...
    double(p.JFmaxm), ...
    double(p.Jresp), ...
    double(p.Jloss_passive_m), ...
    p.theta, ...
    double(p.mort), ...
    double(p.mort2), ...
    double(p.mortHTL*p.mortHTLm), ...
    double(p.remin), ...
    double(p.remin2), ...
    double(p.cLeakage))
%
% Simulate:
%
[t, y] = ode45(@derivChemostat, [0 365], [0.1*p.N0, p.DOC0, p.B0], [], p);
%
% Extract result:
%
ixB = 3:p.n+2;
ixTime = find(t>=(max(t)/2),1):length(t);

sim.t = t;
sim.p = p;

sim.Btime = y(:,ixB);
sim.Ntime = y(:,1);
sim.DOCtime = y(:,2);

sim.Bmean = mean(sim.Btime(ixTime,:));
sim.Nmean = mean(sim.Ntime(ixTime,:));
sim.DOCmean = mean(sim.DOCtime(ixTime,:));

end
